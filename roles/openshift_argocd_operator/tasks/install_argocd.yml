- name: Deploy Argo CD operator
  command: oc apply --kustomize {{ argocd_kustomizations.operator }}

- name: Wait for Argo CD operator to deploy
  import_role:
    name: openshift_common
    tasks_from: wait_for_operator.yml
  vars:
    subscription_name: '{{ argocd_subscription_name }}'
    subscription_namespace: '{{ argocd_subscription_namespace }}'

- name: Set admin user password
  k8s:
    definition: "{{ lookup('template', item) }}"
  loop:
    - '{{ argocd_instance_name }}-cluster-secret.yaml'

- name: Obtain ingress wildcard certificate
  k8s_info:
    api_version: v1
    kind: Secret
    name: wildcard-cert
    namespace: openshift-ingress
  register: wildcard_cert

- name: Configure Argo CD endpoint TLS cert
  k8s:
    definition: "{{ lookup('template', '{{ argocd_instance_name }}-tls-secret.yaml') }}"
  when: wildcard_cert.resources | length == 1

- name: Obtain sa secrets in the default namespace
  k8s_info:
    api_version: v1
    kind: Secret
    namespace: default
    field_selectors:
      - type=kubernetes.io/service-account-token
  register: sa_secrets

- name: Trust the hosting cluster's certs
  k8s:
    definition: "{{ lookup('template', '{{ argocd_instance_name }}-tls-certs-cm-cm.yaml') }}"

- name: Deploy Argo CD instance
  command: oc apply --kustomize {{ argocd_kustomizations.instance }}

- name: Waiting since {{ lookup("pipe", "date +%r") }} for {{ argocd_instance_name }} deployment to complete
  k8s_info:
    api_version: argoproj.io/v1alpha1
    kind: ArgoCD
    namespace: '{{ argocd_instance_namespace }}'
    name: '{{ argocd_instance_name }}'
  register: argocd_instance
  until:
    - argocd_instance.resources | length > 0
    - argocd_instance.resources.0.status is defined
    - argocd_instance.resources.0.status.phase is defined
    - argocd_instance.resources.0.status.phase == 'Available'
  retries: 30
  delay: 10
