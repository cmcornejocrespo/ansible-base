- name: Order the service
  import_role:
    name: otlc_generic_order
  vars:
    otlc_order_wait_retries: 480

- set_fact:
    otlc_service_raw:
      guid:  '{{ (otlc_service_attributes.json.custom_attributes | selectattr("name", "equalto", "GUID") | first).value }}'
      env0:  '{{ (otlc_service_attributes.json.custom_attributes | selectattr("name", "equalto", "Environment Info 000") | first).value }}'
      env1:  '{{ (otlc_service_attributes.json.custom_attributes | selectattr("name", "equalto", "Environment Info 001") | first).value }}'
      env2:  '{{ (otlc_service_attributes.json.custom_attributes | selectattr("name", "equalto", "Environment Info 002") | first).value }}'
      env3:  '{{ (otlc_service_attributes.json.custom_attributes | selectattr("name", "equalto", "Environment Info 003") | first).value }}'
      env4:  '{{ (otlc_service_attributes.json.custom_attributes | selectattr("name", "equalto", "Environment Info 004") | first).value }}'
      env5:  '{{ (otlc_service_attributes.json.custom_attributes | selectattr("name", "equalto", "Environment Info 005") | first).value }}'
      env6:  '{{ (otlc_service_attributes.json.custom_attributes | selectattr("name", "equalto", "Environment Info 006") | first).value }}'
      env7:  '{{ (otlc_service_attributes.json.custom_attributes | selectattr("name", "equalto", "Environment Info 007") | first).value }}'
      env8:  '{{ (otlc_service_attributes.json.custom_attributes | selectattr("name", "equalto", "Environment Info 008") | first).value }}'
      env9:  '{{ (otlc_service_attributes.json.custom_attributes | selectattr("name", "equalto", "Environment Info 009") | first).value }}'
      env10: '{{ (otlc_service_attributes.json.custom_attributes | selectattr("name", "equalto", "Environment Info 010") | first).value }}'
      target_host: '{{ (otlc_service_attributes.json.custom_attributes | selectattr("name", "equalto", "targetHost") | first).value }}'
      aws_region: '{{ (otlc_service_attributes.json.custom_attributes | selectattr("name", "equalto", "ec2region") | first).value }}'

- set_fact:
    otlc_service_info:
      guid:             '{{ otlc_service_raw.guid }}'
      top_level_domain: '{{ otlc_service_raw.target_host | regex_replace("^bastion\.", "")}}'
      ssh_username:     "{{ otlc_service_raw.env10.split(\"'\").1 | trim }}"
      ssh_hostname:     '{{ otlc_service_raw.env9.split(" ").1.split("@").1 | trim }}'
      ssh_password:     "{{ otlc_service_raw.env10.split(\"'\").3 | trim }}"
      aws_region:       '{{ otlc_service_raw.aws_region }}'

- debug:
    var: otlc_service_info
